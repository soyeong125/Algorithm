from collections import deque
import math

def solution(n, wires):
    answer = float('inf')
    tree = [[] for _ in range(n + 1)] #트리를 우선 생성
    for w1,w2 in wires:
        tree[w1].append(w2)
        tree[w2].append(w1)

    for w1,w2 in wires: #노드를 미리 체크한다 (두 노드는 이미 체크했으므로 더이상 체크 안함 -> 연결 안됨)
        visited = [False for _ in range(n + 1)]  # 방문한 노드 체크 할 리스트
        res = [0 for _ in range(n + 1)]  # 방문한 노드 root 노드 체크

        q = deque()
        node1 = w1
        node2 = w2
        q.append(node1)  # 자른 간선을 기준으로 체크
        q.append(node2)  # 자른 간선을 기준으로 체크
        visited[node1] = True  # 시작 노드 방문 체크
        visited[node2] = True  # 시작 노드 방문 체크
        res[node1] = node1
        res[node2] = node2

        while q:
            cur_node = q.popleft()
            for next_node in tree[cur_node]:
                if not visited[next_node]:
                    visited[next_node] = True
                    res[next_node] = res[cur_node]
                    q.append(next_node)

        ans1 = res.count(node1)
        ans2 = res.count(node2)
        answer = min(answer, abs(ans1 - ans2))

    return answer
